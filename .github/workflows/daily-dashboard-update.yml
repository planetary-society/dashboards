# GitHub Action Workflow: Daily Dashboard Update
#
# This workflow runs daily to:
# 1. Download the latest CSV data.
# 2. Compare and clean up data files.
# 3. Render a Quarto dashboard.
# 4. Commit new data and the rebuilt dashboard.
# 5. Deploy the output to GitHub Pages.

name: Daily Dashboard Update

on:
  schedule:
    # runs every day at 8:00 AM Pacific Time (15:00 UTC)
    - cron: '0 15 * * *'
  workflow_dispatch: # Allows manual triggering

jobs:
  build-and-deploy: # Renamed job for clarity
    runs-on: ubuntu-latest
    permissions:
      contents: write   # Required to commit changes
      pages: write      # Required to deploy to GitHub Pages
      id-token: write   # Required for trusted deployment
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Quarto CLI
        uses: quarto-dev/quarto-actions/setup@v2

      - name: Ensure data directory exists
        run: mkdir -p data

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Define new filename
        id: define_filename
        run: echo "FILENAME=data/nasa_cancelled_contracts_$(date +'%Y-%m-%d').csv" >> $GITHUB_OUTPUT

      - name: Download latest CSV
        run: |
          curl -fL -o ${{ steps.define_filename.outputs.FILENAME }} \
            "https://docs.google.com/spreadsheets/d/1I3qXx1XDLKukqAd9U6zVp7S861XUAKZaAp0vrmsDJpg/export?format=csv"

      - name: Compare with previous and cleanup
        id: compare_files
        run: |
          NEW_FILE="${{ steps.define_filename.outputs.FILENAME }}"
          echo "Newly downloaded file: $NEW_FILE"
          PREVIOUS_FILE=$(ls -r data/*.csv 2>/dev/null | grep -v "$NEW_FILE" | head -n 1)
          if [[ -n "$PREVIOUS_FILE" && -f "$PREVIOUS_FILE" ]]; then
            echo "Comparing with previous file: $PREVIOUS_FILE"
            if cmp -s "$PREVIOUS_FILE" "$NEW_FILE"; then
              echo "Files are identical. Deleting $NEW_FILE."
              rm "$NEW_FILE"
              echo "file_kept=false" >> $GITHUB_OUTPUT
            else
              echo "Files are different. Keeping $NEW_FILE."
              echo "file_kept=true" >> $GITHUB_OUTPUT
            fi
          else
            echo "No previous file found. Keeping $NEW_FILE."
            echo "file_kept=true" >> $GITHUB_OUTPUT
          fi

      - name: Render Cancelations dashboard
        run: quarto render cancellations.qmd

      - name: Commit & push changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore: daily data refresh and dashboard rebuild"
          file_pattern: |
            data/*.csv
            **/*.html
            **/*.css

      # --- New Deployment Steps Below ---

      - name: Configure GitHub Pages
        uses: actions/configure-pages@v5

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'docs'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4