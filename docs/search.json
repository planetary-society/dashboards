[
  {
    "objectID": "dashboard.html",
    "href": "dashboard.html",
    "title": "NASA Contract Cancellations Tracking",
    "section": "",
    "text": "These data are collected via the offial DOGE website, NASA’s Data Procurement View, and the NASA Grants Form archive."
  },
  {
    "objectID": "dashboard.html#row",
    "href": "dashboard.html#row",
    "title": "NASA Contract Cancellations Tracking",
    "section": "Row",
    "text": "Row\n\ndict(\n    value = f\"{total_contracts}\",\n    icon=\"bi-file-earmark-text\"\n)\n\n{'value': '127', 'icon': 'bi-file-earmark-text'}\n\n\n\ndict(\n  value = total_obligations,\n  icon=\"bi-currency-dollar\"\n)\n\n{'value': '$97.5M', 'icon': 'bi-currency-dollar'}\n\n\n\ndict(\n  value = f\"{total_unique_recipcients}\",\n  icon=\"bi-buildings\"\n)\n\n{'value': '89', 'icon': 'bi-buildings'}"
  },
  {
    "objectID": "dashboard.html#row-1",
    "href": "dashboard.html#row-1",
    "title": "NASA Contract Cancellations Tracking",
    "section": "Row",
    "text": "Row\n\nColumn\n\nimport json\nfrom ipyleaflet import Map, Marker, GeoJSON, LayersControl, basemaps # Correct imports\nimport ipywidgets # Needed for popups\n\n# Load the GeoJSON data from the file created in the setup chunk\ngeojson_file_path = 'states_impacted_map_data.geojson'\nwith open(geojson_file_path, 'r') as f:\n    geo_data = json.load(f)\n\n# Create map centered on US using ipyleaflet.Map\nm = Map(center=[39.8283, -98.5795], zoom=4, basemap=basemaps.CartoDB.Positron) # Use correct Map and add basemap\n\n# Add markers with popups\nfor feature in geo_data['features']:\n    props = feature['properties']\n    coords = feature['geometry']['coordinates'] # GeoJSON is [lon, lat]\n    # ipyleaflet Marker uses (lat, lon)\n    marker_location = (coords[1], coords[0])\n    marker = Marker(location=marker_location, draggable=False)\n\n    # Create popup content\n    popup_content = ipywidgets.HTML()\n    popup_content.value = f\"&lt;b&gt;{props['name']}&lt;/b&gt;&lt;br&gt;Contracts: {props['contracts']}\"\n    marker.popup = popup_content\n\n    m.add_layer(marker)\n\n\n# Add Layer control (Optional if only markers are added, useful if adding other layers)\n# m.add_control(LayersControl()) # Use correct LayersControl if needed\n\n# Display the map\nm\n\n\n\n\n\n\nColumn\n\n# Display the pandas DataFrame. Quarto renders it as a table.\n# Applying scrolling via CSS is more reliable than pandas styling options here.\n# Add style to make the card body scrollable.\n\nfrom IPython.display import display, HTML\n#| title: Recipients Impacted\n#| component: card\n# Display the dataframe - Quarto/IPython handles the rendering\nrecipients_table_data\n\n\n\n\n\n\n\n\nRecipient\n# of Contracts\n\n\n\n\n0\nThe Trustees of Princeton University\n7\n\n\n1\nBarrios Technology, LLC\n7\n\n\n2\nHx5 LLC\n5\n\n\n3\nBooz Allen Hamilton INC\n5\n\n\n4\nIcf Incorporated, L.L.C.\n4\n\n\n...\n...\n...\n\n\n84\nUniversity of Oklahoma\n1\n\n\n85\nUniversity of Richmond\n1\n\n\n86\nVirginia Polytechnic Institute & State University\n1\n\n\n87\nVirginia State University\n1\n\n\n88\nThe University of Texas Rio Grande Valley\n1\n\n\n\n\n89 rows × 2 columns"
  },
  {
    "objectID": "test.html",
    "href": "test.html",
    "title": "Test Theme",
    "section": "",
    "text": "This is a test."
  },
  {
    "objectID": "test.html#hello-world",
    "href": "test.html#hello-world",
    "title": "Test Theme",
    "section": "",
    "text": "This is a test."
  }
]