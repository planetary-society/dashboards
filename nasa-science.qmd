---
title: NASA Science Spending Across the U.S.
format:
  dashboard:
    pagetitle: NASA Science Spending Across the U.S.
    description-meta: "Dashboard showing NASA's science investments across the United States."
    author-meta: "The Planetary Society"
    logo: "img/TPS_Logo_3Stack-White.png"
    lang: en
    nav-buttons:
      - href: mailto:casey.dreier@planetary.org
        text: "Contact"
    theme: yeti
    css: custom.css
    include-in-header:
      - text: |
          <link rel="preconnect" href="https://fonts.googleapis.com">
          <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
          <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;700&display=swap" rel="stylesheet">
          <script>
          function updateLogoLink() {
              const logoAnchor = document.querySelector('a[href="#"] > img.navbar-logo');
              
              if (logoAnchor) {
                  const anchor = logoAnchor.parentElement;                  
                  anchor.href = 'https://planetary.org';
                  anchor.target = '_blank';
                  anchor.title = 'The Planetary Society';
                  return true;
              }
              return false;
          }
          function initialize() {
              updateLogoLink();
          }

          // Wait for DOM to be ready
          if (document.readyState === 'loading') {
              document.addEventListener('DOMContentLoaded', initialize);
          } else {
              // Small delay to ensure Quarto has finished rendering
              setTimeout(initialize, 100);
          }
          // Also try on window load as backup
          window.addEventListener('load', () => {
              setTimeout(() => {
                  updateLogoLink();
              }, 1000);
          });
          </script>
          <!-- Twitter Card meta tags -->
          <meta name="twitter:card" content="summary_large_image">
          <meta name="twitter:site" content="@exploreplanets">
          <meta name="twitter:title" content="NASA Science Spending Dashboard">
          <meta name="twitter:description" content="Interactive map of spending by NASA's science directorate in every state and congressional district.">
          <meta name="twitter:image" content="https://dashboards.planetary.orgdocs/img/tps-science-budget-preview.png">
          <meta name="twitter:image:alt" content="Interactive map of annual spending by NASA science in every state and congressional district.">
          <!-- Open Graph meta tags -->
          <meta property="og:type" content="website">
          <meta property="og:site_name" content="The Planetary Society">
          <meta property="og:title" content="NASA Science Spending Dashboard">
          <meta property="og:description" content="Interactive map of spending by NASA's science directorate in every state and congressional district.">
          <meta property="og:image" content="https://dashboards.planetary.org/img/tps-science-budget-preview.png">
          <meta property="og:image:width" content="1200">
          <meta property="og:image:height" content="675">
          <meta property="og:image:alt" content="Interactive map of spending by NASA's science directorate in every state and congressional district.">
          <meta property="og:url" content="https://dashboards.planetary.org/nasa-science.html">
          <meta name="robots" content="index, follow">
          <meta name="theme-color" content="#037cc2">
---

```{python}
#| echo: false
#| include: false

import sys
sys.path.append('src')

from us_spending_maps import USSpendingMaps, create_spending_map, amount_formatter
import pandas as pd
from datetime import datetime
from itables import show
import os


# Load and prepare data
science_district_csv_path = 'data/NASA-district-Science-summary.csv'
science_state_csv_path = 'data/NASA-state-Science-summary.csv'
district_last_updated = datetime.fromtimestamp(os.path.getmtime(science_district_csv_path))

# Set date range to analyze (assumes corresponding range of 'fy_{yyyy}_obligations' columns in csv)
start_year = 2022
end_year = 2024


value_cols = []
for fy in range(start_year, end_year+1):
  value_cols.append(f"fy_{fy}_obligations")

# Create dashboard data using the convenience function
district_result = create_spending_map(
  csv_path=science_district_csv_path,
  geo_col="district",
  level="district",
  value_cols=value_cols,
  use_stepped=True,
  geojson_path="us_congressional_districts.geojson"
)
district_map = district_result['map']
district_df = district_result["dataframe"]

# Count of all districts with spending (i.e. no all empty rows)
# Dynamically generate filter for districts with spending in any year between start_year and end_year
spending_filter = None
for fy in range(start_year, end_year + 1):
  col = f'fy_{fy}_obligations'
  if spending_filter is None:
    spending_filter = (district_df[col] != 0)
  else:
    spending_filter |= (district_df[col] != 0)
districts_with_spending = district_df[spending_filter]

df_with_url = districts_with_spending.assign(
    district_url=lambda df_lambda: df_lambda.apply(
      lambda row: (
        f"https://planetary.s3.amazonaws.com/impact-reports/{row['state']}/{row['state']}-NASA-Science.pdf"
        if str(row['district'].split('-')[1]).zfill(2) == "00"
        else f"https://planetary.s3.amazonaws.com/impact-reports/{row['state']}/{str(row['district'].split('-')[1]).zfill(2)}/{row['state']}-{str(row['district'].split('-')[1]).zfill(2)}-NASA-Science.pdf"
      ),
      axis=1
    )
)

districts_by_state = (
  df_with_url
  .groupby('state')
  .agg(
    districts=('district', lambda x: ', '.join(
      [
        f'<a href="{u}" target="_blank">{d.split("-")[1].zfill(2)}</a>'
        for d, u in zip(x, df_with_url.loc[x.index, 'district_url'])
      ]
    ))
  )
  .reset_index()
)

districts_by_state['state'] = districts_by_state['state'].apply(
  lambda state_abbr: f'<a href="https://planetary.s3.amazonaws.com/impact-reports/{state_abbr}/{state_abbr}-NASA-Science.pdf" target="_blank">{state_abbr}</a>'
)

# Capitalize header column names
districts_by_state.columns = [col.capitalize() for col in districts_by_state.columns]

district_count = districts_with_spending.shape[0]
percent_districts = round(((district_count/435)*100))
# Sum all values in most recent FY
district_total_most_recent_fy = amount_formatter(district_df[f"fy_{end_year}_obligations"].sum(), False)

state_result = create_spending_map(
  csv_path=science_state_csv_path,
  geo_col="state",
  level="state",
  value_cols=value_cols,
  use_stepped=True,
  geojson_path="us_states.geojson"
)
state_map = state_result['map']
state_df = state_result['dataframe']

state_count = state_df[spending_filter].shape[0]

```

# Spending Maps

## Row

### Column {width=70%}{.tabset}

```{python}
#| title: By District
#| component: card
#| echo: false

display(district_map)
```

```{python}
#| title: By State
#| component: card
#| echo: false

display(state_map)

```

### Column {width=30%}

#### Row {height=32%}

::: {.card title="NASA Science is Everywhere" class="highlight"}
NASA's science investments benefit **every state** and **`{python} percent_districts`% (`{python} district_count`)** of all congressional districts. In FY `{python} end_year` alone, **NASA science committed `{python} district_total_most_recent_fy`** to recipients around the country.
:::


#### Row
```{python}
#| title: "Detailed Economic Impact Reports" 
#| component: datatable
#| echo: false
show(districts_by_state,classes="display wrap compact", searching=False, info=False)
```


# Data Summary

::: {.card}
**Data Summary**

- **Last Updated:** `{python} district_last_updated.strftime("%B %-d, %Y")`
- **Data Source:** USASpending.gov

**About the Data**

This dashboard displays average annual NASA Science Mission Directorate contract obligations by congressional district and state for fiscal years `{python} start_year`-`{python} end_year`. The data includes research grants, contracts, and cooperative agreements supporting NASA's science programs including Earth Science, Planetary Science, Astrophysics, and Heliophysics.

Values reflect the average sum of contractual obligations made by NASA's Science Mission Directorate based on the location of work in the given locale.


:::